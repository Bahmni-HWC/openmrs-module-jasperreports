<?xml version="1.0"?>
<!-- ********************************************************* -->
<!-- ** JasperReport Module									** -->
<!-- **														** -->
<!-- ** @author Cell-Life									** -->
<!-- ** @version 0.1										** -->
<!-- ********************************************************* -->
<project name="JasperReportModule" default="package-module">

	<property name="module.version" value="1.4" />
	<property file="build.properties" />

	<taskdef name="jrc" classname="net.sf.jasperreports.ant.JRAntCompileTask">
		<classpath>
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
		</classpath>
	</taskdef>

	<!-- *********************************************************** -->
	<!-- **                     TARGETS                           ** -->
	<!-- *********************************************************** -->
	<target name="init" description="initialization">
		<echo>Building version ${module.version}</echo>
		<filterset id="variables.to.replace">
			<filter token="MODULE_NAME" value="${module.name}" />
			<filter token="MODULE_VERSION" value="${module.version}" />
		</filterset>

		<path id="classpath">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
		</path>

		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />

	</target>

	<target name="clean" description="Delete build and dist directories">
		<delete dir="${dist.dir}" />
		<delete dir="${build.dir}" />
	</target>

	<target name="compile-module" depends="init" description="Compiles the module">

		<!--  Compile module java files -->
		<javac destdir="${build.dir}" classpathref="classpath" debug="true" debuglevel="lines,source">
			<src path="${src.dir}" />
			<include name="**/*.java" />
		</javac>

		<!--  Compile module web java files -->
		<javac destdir="${build.dir}" classpathref="classpath" debug="true" debuglevel="lines,source">
			<src path="${web.src.dir}" />
			<include name="**/*.java" />
		</javac>

	</target>

	<target name="Compile JasperReports" description="Compiles the JRXML's to JASPERs">
		<jrc compiler="net.sf.jasperreports.engine.design.JRJavacCompiler">
			<src>
				<fileset dir="${reports.dir}/">
					<include name="**/*.jrxml" />
				</fileset>
			</src>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</jrc>
	</target>

	<target name="package-module" depends="compile-module" description="Packages module into jar file">
		<!-- Copy module support files -->
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.sql" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>

		<!-- Copy module libs 
		<copy todir="${build.dir}/lib" flatten="true">
			<fileset dir="${lib.dir}">
				<include name="jasper/*.jar" />
				<include name="commons-javaflow/*.jar" />
				<include name="commons-digester/*.jar" />
			</fileset>
		</copy>-->

		<!-- Copy module metadata -->
		<copy todir="${build.dir}">
			<fileset dir="metadata/" includes="**/*" />
			<filterset refid="variables.to.replace" />
		</copy>

		<!-- Copy module web data -->
		<copy todir="${build.dir}/web/module/">
			<fileset dir="web/module/" includes="**/*" />
			<filterset refid="variables.to.replace" />
		</copy>

		<!-- Create distributable jar file -->
		<jar destfile="${dist.dir}/${module.name}-${module.version}.omod">
			<fileset dir="build" includes="**/*" />
		</jar>
	</target>

	<target name="Package reports" depends="init" description="Creates a report archive for each reports in the dist directory">
		<zip destfile="${dist.dir}/pepfar_quarterly.zip" basedir="${reports.dir}/pepfar_quarterly" includes="**/*.jrxml" />
		<zip destfile="${dist.dir}/pawc_quarterly.zip" basedir="${reports.dir}/pawc_quarterly" includes="**/*.jrxml" />
		<zip destfile="${dist.dir}/pawc_monthly.zip" basedir="${reports.dir}/pawc_monthly" includes="**/*.jrxml" />
	</target>

	<target name="Export source" depends="init" description="Export the source for release">
		<mkdir dir="${export.src}" />
		<!-- Copy module metadata -->
		<copy todir="${export.src}/src">
			<fileset dir="${src.dir}">
				<include name="**/*" />
				<exclude name="**/Props.java" />
				<exclude name="**/log4j.properties" />
				<exclude name="**/props.properties" />
				<exclude name="**/DrugComboReportGenerator.java" />
			</fileset>
		</copy>
		<copy todir="${export.src}/test">
			<fileset dir="${test.dir}" includes="**/*" />
		</copy>
		<copy todir="${export.src}/metadata">
			<fileset dir="${basedir}/metadata" includes="**/*" />
		</copy>
		<copy todir="${export.src}/web">
			<fileset dir="${web.dir}" includes="**/*" />
		</copy>
		<copy todir="${export.src}/lib">
			<fileset dir="${lib.dir}" includes="**/*" />
		</copy>
		<copy todir="${export.src}">
			<fileset dir="${basedir}">
				<include name="**/build.xml" />
				<include name="**/build.properties" />
			</fileset>
		</copy>
	</target>
</project>

